/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.sisyphus.CartesianCoordinate');
goog.provide('proto.sisyphus.CartesianPattern');
goog.provide('proto.sisyphus.ParametricPattern');
goog.provide('proto.sisyphus.ParametricPattern.Equation');
goog.provide('proto.sisyphus.ParametricPattern.Equation.BinaryEquation');
goog.provide('proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType');
goog.provide('proto.sisyphus.ParametricPattern.Equation.UnaryEquation');
goog.provide('proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType');
goog.provide('proto.sisyphus.ParametricPattern.Equation.Variable');
goog.provide('proto.sisyphus.ParametricPattern.Type');
goog.provide('proto.sisyphus.Pattern');
goog.provide('proto.sisyphus.PolarCoordinate');
goog.provide('proto.sisyphus.PolarPattern');
goog.provide('proto.sisyphus.Segment');
goog.provide('proto.sisyphus.Segment.Point');
goog.provide('proto.sisyphus.Step');
goog.provide('proto.sisyphus.Step.Movement');
goog.provide('proto.sisyphus.StoredPattern');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.Pattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sisyphus.Pattern.repeatedFields_, null);
};
goog.inherits(proto.sisyphus.Pattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.Pattern.displayName = 'proto.sisyphus.Pattern';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sisyphus.Pattern.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.Pattern.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.Pattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.Pattern} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.Pattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathSegmentList: jspb.Message.toObjectList(msg.getPathSegmentList(),
    proto.sisyphus.Segment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.Pattern}
 */
proto.sisyphus.Pattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.Pattern;
  return proto.sisyphus.Pattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.Pattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.Pattern}
 */
proto.sisyphus.Pattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.Segment;
      reader.readMessage(value,proto.sisyphus.Segment.deserializeBinaryFromReader);
      msg.addPathSegment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.Pattern} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Pattern.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.Pattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Pattern.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPathSegmentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sisyphus.Segment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Segment path_segment = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.sisyphus.Segment>}
 */
proto.sisyphus.Pattern.prototype.getPathSegmentList = function() {
  return /** @type{!Array.<!proto.sisyphus.Segment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sisyphus.Segment, 1));
};


/** @param {!Array.<!proto.sisyphus.Segment>} value */
proto.sisyphus.Pattern.prototype.setPathSegmentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sisyphus.Segment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sisyphus.Segment}
 */
proto.sisyphus.Pattern.prototype.addPathSegment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sisyphus.Segment, opt_index);
};


proto.sisyphus.Pattern.prototype.clearPathSegmentList = function() {
  this.setPathSegmentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.Segment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.Segment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.Segment.displayName = 'proto.sisyphus.Segment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.Segment.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.Segment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.Segment} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.Segment.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && proto.sisyphus.Segment.Point.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.sisyphus.Segment.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.Segment}
 */
proto.sisyphus.Segment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.Segment;
  return proto.sisyphus.Segment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.Segment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.Segment}
 */
proto.sisyphus.Segment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.Segment.Point;
      reader.readMessage(value,proto.sisyphus.Segment.Point.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new proto.sisyphus.Segment.Point;
      reader.readMessage(value,proto.sisyphus.Segment.Point.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.Segment} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Segment.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.Segment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Segment.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sisyphus.Segment.Point.serializeBinaryToWriter
    );
  }
  f = this.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sisyphus.Segment.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point start = 1;
 * @return {?proto.sisyphus.Segment.Point}
 */
proto.sisyphus.Segment.prototype.getStart = function() {
  return /** @type{?proto.sisyphus.Segment.Point} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.Segment.Point, 1));
};


/** @param {?proto.sisyphus.Segment.Point|undefined} value */
proto.sisyphus.Segment.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sisyphus.Segment.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Segment.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Point end = 2;
 * @return {?proto.sisyphus.Segment.Point}
 */
proto.sisyphus.Segment.prototype.getEnd = function() {
  return /** @type{?proto.sisyphus.Segment.Point} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.Segment.Point, 2));
};


/** @param {?proto.sisyphus.Segment.Point|undefined} value */
proto.sisyphus.Segment.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sisyphus.Segment.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Segment.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.Segment.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.Segment.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.Segment.Point.displayName = 'proto.sisyphus.Segment.Point';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.Segment.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.Segment.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.Segment.Point} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.Segment.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    angularValue: jspb.Message.getField(msg, 1),
    linearValue: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.Segment.Point}
 */
proto.sisyphus.Segment.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.Segment.Point;
  return proto.sisyphus.Segment.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.Segment.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.Segment.Point}
 */
proto.sisyphus.Segment.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAngularValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinearValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.Segment.Point} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Segment.Point.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.Segment.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Segment.Point.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 angular_value = 1;
 * @return {number}
 */
proto.sisyphus.Segment.Point.prototype.getAngularValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sisyphus.Segment.Point.prototype.setAngularValue = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.sisyphus.Segment.Point.prototype.clearAngularValue = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Segment.Point.prototype.hasAngularValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 linear_value = 2;
 * @return {number}
 */
proto.sisyphus.Segment.Point.prototype.getLinearValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sisyphus.Segment.Point.prototype.setLinearValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.sisyphus.Segment.Point.prototype.clearLinearValue = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Segment.Point.prototype.hasLinearValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.Step = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.Step, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.Step.displayName = 'proto.sisyphus.Step';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.Step.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.Step.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.Step} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.Step.toObject = function(includeInstance, msg) {
  var f, obj = {
    angularMovement: jspb.Message.getField(msg, 1),
    linearMovement: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.Step}
 */
proto.sisyphus.Step.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.Step;
  return proto.sisyphus.Step.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.Step} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.Step}
 */
proto.sisyphus.Step.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sisyphus.Step.Movement} */ (reader.readEnum());
      msg.setAngularMovement(value);
      break;
    case 2:
      var value = /** @type {!proto.sisyphus.Step.Movement} */ (reader.readEnum());
      msg.setLinearMovement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.Step} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Step.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.Step.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.Step.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {!proto.sisyphus.Step.Movement} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.sisyphus.Step.Movement} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Movement angular_movement = 1;
 * @return {!proto.sisyphus.Step.Movement}
 */
proto.sisyphus.Step.prototype.getAngularMovement = function() {
  return /** @type {!proto.sisyphus.Step.Movement} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.sisyphus.Step.Movement} value */
proto.sisyphus.Step.prototype.setAngularMovement = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.sisyphus.Step.prototype.clearAngularMovement = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Step.prototype.hasAngularMovement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Movement linear_movement = 2;
 * @return {!proto.sisyphus.Step.Movement}
 */
proto.sisyphus.Step.prototype.getLinearMovement = function() {
  return /** @type {!proto.sisyphus.Step.Movement} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/** @param {!proto.sisyphus.Step.Movement} value */
proto.sisyphus.Step.prototype.setLinearMovement = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.sisyphus.Step.prototype.clearLinearMovement = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.Step.prototype.hasLinearMovement = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.sisyphus.Step.Movement = {
  FORWARDS: 1,
  BACKWARDS: 2,
  STOP: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.CartesianCoordinate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.CartesianCoordinate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.CartesianCoordinate.displayName = 'proto.sisyphus.CartesianCoordinate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.CartesianCoordinate.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.CartesianCoordinate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.CartesianCoordinate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.CartesianCoordinate.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getOptionalFloatingPointField(msg, 1),
    y: jspb.Message.getOptionalFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.CartesianCoordinate}
 */
proto.sisyphus.CartesianCoordinate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.CartesianCoordinate;
  return proto.sisyphus.CartesianCoordinate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.CartesianCoordinate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.CartesianCoordinate}
 */
proto.sisyphus.CartesianCoordinate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.CartesianCoordinate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.CartesianCoordinate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.CartesianCoordinate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.CartesianCoordinate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.sisyphus.CartesianCoordinate.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.sisyphus.CartesianCoordinate.prototype.setX = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.sisyphus.CartesianCoordinate.prototype.clearX = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.CartesianCoordinate.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.sisyphus.CartesianCoordinate.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.sisyphus.CartesianCoordinate.prototype.setY = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.sisyphus.CartesianCoordinate.prototype.clearY = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.CartesianCoordinate.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.PolarCoordinate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.PolarCoordinate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.PolarCoordinate.displayName = 'proto.sisyphus.PolarCoordinate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.PolarCoordinate.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.PolarCoordinate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.PolarCoordinate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.PolarCoordinate.toObject = function(includeInstance, msg) {
  var f, obj = {
    r: jspb.Message.getOptionalFloatingPointField(msg, 1),
    a: jspb.Message.getOptionalFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.PolarCoordinate}
 */
proto.sisyphus.PolarCoordinate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.PolarCoordinate;
  return proto.sisyphus.PolarCoordinate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.PolarCoordinate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.PolarCoordinate}
 */
proto.sisyphus.PolarCoordinate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setR(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.PolarCoordinate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.PolarCoordinate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.PolarCoordinate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.PolarCoordinate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float r = 1;
 * @return {number}
 */
proto.sisyphus.PolarCoordinate.prototype.getR = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.sisyphus.PolarCoordinate.prototype.setR = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.sisyphus.PolarCoordinate.prototype.clearR = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.PolarCoordinate.prototype.hasR = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float a = 2;
 * @return {number}
 */
proto.sisyphus.PolarCoordinate.prototype.getA = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.sisyphus.PolarCoordinate.prototype.setA = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.sisyphus.PolarCoordinate.prototype.clearA = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.PolarCoordinate.prototype.hasA = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.StoredPattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sisyphus.StoredPattern.oneofGroups_);
};
goog.inherits(proto.sisyphus.StoredPattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.StoredPattern.displayName = 'proto.sisyphus.StoredPattern';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sisyphus.StoredPattern.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.sisyphus.StoredPattern.StorageTypeCase = {
  STORAGE_TYPE_NOT_SET: 0,
  CARTESIAN: 1,
  POLAR: 2,
  PARAMETRIC: 3
};

/**
 * @return {proto.sisyphus.StoredPattern.StorageTypeCase}
 */
proto.sisyphus.StoredPattern.prototype.getStorageTypeCase = function() {
  return /** @type {proto.sisyphus.StoredPattern.StorageTypeCase} */(jspb.Message.computeOneofCase(this, proto.sisyphus.StoredPattern.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.StoredPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.StoredPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.StoredPattern} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.StoredPattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    cartesian: (f = msg.getCartesian()) && proto.sisyphus.CartesianPattern.toObject(includeInstance, f),
    polar: (f = msg.getPolar()) && proto.sisyphus.PolarPattern.toObject(includeInstance, f),
    parametric: (f = msg.getParametric()) && proto.sisyphus.ParametricPattern.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.StoredPattern}
 */
proto.sisyphus.StoredPattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.StoredPattern;
  return proto.sisyphus.StoredPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.StoredPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.StoredPattern}
 */
proto.sisyphus.StoredPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.CartesianPattern;
      reader.readMessage(value,proto.sisyphus.CartesianPattern.deserializeBinaryFromReader);
      msg.setCartesian(value);
      break;
    case 2:
      var value = new proto.sisyphus.PolarPattern;
      reader.readMessage(value,proto.sisyphus.PolarPattern.deserializeBinaryFromReader);
      msg.setPolar(value);
      break;
    case 3:
      var value = new proto.sisyphus.ParametricPattern;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.deserializeBinaryFromReader);
      msg.setParametric(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.StoredPattern} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.StoredPattern.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.StoredPattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.StoredPattern.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCartesian();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sisyphus.CartesianPattern.serializeBinaryToWriter
    );
  }
  f = this.getPolar();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sisyphus.PolarPattern.serializeBinaryToWriter
    );
  }
  f = this.getParametric();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sisyphus.ParametricPattern.serializeBinaryToWriter
    );
  }
};


/**
 * optional CartesianPattern cartesian = 1;
 * @return {?proto.sisyphus.CartesianPattern}
 */
proto.sisyphus.StoredPattern.prototype.getCartesian = function() {
  return /** @type{?proto.sisyphus.CartesianPattern} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.CartesianPattern, 1));
};


/** @param {?proto.sisyphus.CartesianPattern|undefined} value */
proto.sisyphus.StoredPattern.prototype.setCartesian = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.sisyphus.StoredPattern.oneofGroups_[0], value);
};


proto.sisyphus.StoredPattern.prototype.clearCartesian = function() {
  this.setCartesian(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.StoredPattern.prototype.hasCartesian = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PolarPattern polar = 2;
 * @return {?proto.sisyphus.PolarPattern}
 */
proto.sisyphus.StoredPattern.prototype.getPolar = function() {
  return /** @type{?proto.sisyphus.PolarPattern} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.PolarPattern, 2));
};


/** @param {?proto.sisyphus.PolarPattern|undefined} value */
proto.sisyphus.StoredPattern.prototype.setPolar = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.sisyphus.StoredPattern.oneofGroups_[0], value);
};


proto.sisyphus.StoredPattern.prototype.clearPolar = function() {
  this.setPolar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.StoredPattern.prototype.hasPolar = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParametricPattern parametric = 3;
 * @return {?proto.sisyphus.ParametricPattern}
 */
proto.sisyphus.StoredPattern.prototype.getParametric = function() {
  return /** @type{?proto.sisyphus.ParametricPattern} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern, 3));
};


/** @param {?proto.sisyphus.ParametricPattern|undefined} value */
proto.sisyphus.StoredPattern.prototype.setParametric = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.sisyphus.StoredPattern.oneofGroups_[0], value);
};


proto.sisyphus.StoredPattern.prototype.clearParametric = function() {
  this.setParametric(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.StoredPattern.prototype.hasParametric = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.CartesianPattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sisyphus.CartesianPattern.repeatedFields_, null);
};
goog.inherits(proto.sisyphus.CartesianPattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.CartesianPattern.displayName = 'proto.sisyphus.CartesianPattern';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sisyphus.CartesianPattern.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.CartesianPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.CartesianPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.CartesianPattern} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.CartesianPattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    coordinateList: jspb.Message.toObjectList(msg.getCoordinateList(),
    proto.sisyphus.CartesianCoordinate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.CartesianPattern}
 */
proto.sisyphus.CartesianPattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.CartesianPattern;
  return proto.sisyphus.CartesianPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.CartesianPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.CartesianPattern}
 */
proto.sisyphus.CartesianPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.CartesianCoordinate;
      reader.readMessage(value,proto.sisyphus.CartesianCoordinate.deserializeBinaryFromReader);
      msg.addCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.CartesianPattern} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.CartesianPattern.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.CartesianPattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.CartesianPattern.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCoordinateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sisyphus.CartesianCoordinate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CartesianCoordinate coordinate = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.sisyphus.CartesianCoordinate>}
 */
proto.sisyphus.CartesianPattern.prototype.getCoordinateList = function() {
  return /** @type{!Array.<!proto.sisyphus.CartesianCoordinate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sisyphus.CartesianCoordinate, 1));
};


/** @param {!Array.<!proto.sisyphus.CartesianCoordinate>} value */
proto.sisyphus.CartesianPattern.prototype.setCoordinateList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sisyphus.CartesianCoordinate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sisyphus.CartesianCoordinate}
 */
proto.sisyphus.CartesianPattern.prototype.addCoordinate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sisyphus.CartesianCoordinate, opt_index);
};


proto.sisyphus.CartesianPattern.prototype.clearCoordinateList = function() {
  this.setCoordinateList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.PolarPattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sisyphus.PolarPattern.repeatedFields_, null);
};
goog.inherits(proto.sisyphus.PolarPattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.PolarPattern.displayName = 'proto.sisyphus.PolarPattern';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sisyphus.PolarPattern.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.PolarPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.PolarPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.PolarPattern} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.PolarPattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    coordinateList: jspb.Message.toObjectList(msg.getCoordinateList(),
    proto.sisyphus.PolarCoordinate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.PolarPattern}
 */
proto.sisyphus.PolarPattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.PolarPattern;
  return proto.sisyphus.PolarPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.PolarPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.PolarPattern}
 */
proto.sisyphus.PolarPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.PolarCoordinate;
      reader.readMessage(value,proto.sisyphus.PolarCoordinate.deserializeBinaryFromReader);
      msg.addCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.PolarPattern} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.PolarPattern.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.PolarPattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.PolarPattern.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCoordinateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sisyphus.PolarCoordinate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PolarCoordinate coordinate = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.sisyphus.PolarCoordinate>}
 */
proto.sisyphus.PolarPattern.prototype.getCoordinateList = function() {
  return /** @type{!Array.<!proto.sisyphus.PolarCoordinate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sisyphus.PolarCoordinate, 1));
};


/** @param {!Array.<!proto.sisyphus.PolarCoordinate>} value */
proto.sisyphus.PolarPattern.prototype.setCoordinateList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sisyphus.PolarCoordinate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sisyphus.PolarCoordinate}
 */
proto.sisyphus.PolarPattern.prototype.addCoordinate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sisyphus.PolarCoordinate, opt_index);
};


proto.sisyphus.PolarPattern.prototype.clearCoordinateList = function() {
  this.setCoordinateList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.ParametricPattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.ParametricPattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.ParametricPattern.displayName = 'proto.sisyphus.ParametricPattern';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.ParametricPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.ParametricPattern} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    equationForXOrTheta: (f = msg.getEquationForXOrTheta()) && proto.sisyphus.ParametricPattern.Equation.toObject(includeInstance, f),
    equationForYOrR: (f = msg.getEquationForYOrR()) && proto.sisyphus.ParametricPattern.Equation.toObject(includeInstance, f),
    startT: jspb.Message.getOptionalFloatingPointField(msg, 4),
    endT: jspb.Message.getOptionalFloatingPointField(msg, 5),
    tStep: jspb.Message.getOptionalFloatingPointField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.ParametricPattern}
 */
proto.sisyphus.ParametricPattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.ParametricPattern;
  return proto.sisyphus.ParametricPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.ParametricPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.ParametricPattern}
 */
proto.sisyphus.ParametricPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sisyphus.ParametricPattern.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.sisyphus.ParametricPattern.Equation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader);
      msg.setEquationForXOrTheta(value);
      break;
    case 3:
      var value = new proto.sisyphus.ParametricPattern.Equation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader);
      msg.setEquationForYOrR(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartT(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEndT(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.ParametricPattern} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.ParametricPattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {!proto.sisyphus.ParametricPattern.Type} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getEquationForXOrTheta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter
    );
  }
  f = this.getEquationForYOrR();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional Type type = 1;
 * @return {!proto.sisyphus.ParametricPattern.Type}
 */
proto.sisyphus.ParametricPattern.prototype.getType = function() {
  return /** @type {!proto.sisyphus.ParametricPattern.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sisyphus.ParametricPattern.Type} value */
proto.sisyphus.ParametricPattern.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.sisyphus.ParametricPattern.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Equation equation_for_x_or_theta = 2;
 * @return {?proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.prototype.getEquationForXOrTheta = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation, 2));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation|undefined} value */
proto.sisyphus.ParametricPattern.prototype.setEquationForXOrTheta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sisyphus.ParametricPattern.prototype.clearEquationForXOrTheta = function() {
  this.setEquationForXOrTheta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasEquationForXOrTheta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Equation equation_for_y_or_r = 3;
 * @return {?proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.prototype.getEquationForYOrR = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation, 3));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation|undefined} value */
proto.sisyphus.ParametricPattern.prototype.setEquationForYOrR = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.sisyphus.ParametricPattern.prototype.clearEquationForYOrR = function() {
  this.setEquationForYOrR(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasEquationForYOrR = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double start_t = 4;
 * @return {number}
 */
proto.sisyphus.ParametricPattern.prototype.getStartT = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.sisyphus.ParametricPattern.prototype.setStartT = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.sisyphus.ParametricPattern.prototype.clearStartT = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasStartT = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double end_t = 5;
 * @return {number}
 */
proto.sisyphus.ParametricPattern.prototype.getEndT = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.sisyphus.ParametricPattern.prototype.setEndT = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.sisyphus.ParametricPattern.prototype.clearEndT = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasEndT = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double t_step = 6;
 * @return {number}
 */
proto.sisyphus.ParametricPattern.prototype.getTStep = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.sisyphus.ParametricPattern.prototype.setTStep = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.sisyphus.ParametricPattern.prototype.clearTStep = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.prototype.hasTStep = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.sisyphus.ParametricPattern.Type = {
  UNKNOWN_TYPE: 0,
  CARTESIAN: 1,
  POLAR: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.ParametricPattern.Equation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sisyphus.ParametricPattern.Equation.oneofGroups_);
};
goog.inherits(proto.sisyphus.ParametricPattern.Equation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.ParametricPattern.Equation.displayName = 'proto.sisyphus.ParametricPattern.Equation';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sisyphus.ParametricPattern.Equation.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.sisyphus.ParametricPattern.Equation.EquationTypeCase = {
  EQUATION_TYPE_NOT_SET: 0,
  BINARY_EQUATION: 1,
  UNARY_EQUATION: 2,
  VARIABLE: 3,
  CONSTANT: 4
};

/**
 * @return {proto.sisyphus.ParametricPattern.Equation.EquationTypeCase}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.getEquationTypeCase = function() {
  return /** @type {proto.sisyphus.ParametricPattern.Equation.EquationTypeCase} */(jspb.Message.computeOneofCase(this, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.ParametricPattern.Equation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.ParametricPattern.Equation} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.toObject = function(includeInstance, msg) {
  var f, obj = {
    binaryEquation: (f = msg.getBinaryEquation()) && proto.sisyphus.ParametricPattern.Equation.BinaryEquation.toObject(includeInstance, f),
    unaryEquation: (f = msg.getUnaryEquation()) && proto.sisyphus.ParametricPattern.Equation.UnaryEquation.toObject(includeInstance, f),
    variable: jspb.Message.getField(msg, 3),
    constant: jspb.Message.getOptionalFloatingPointField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.Equation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.ParametricPattern.Equation;
  return proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.ParametricPattern.Equation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.ParametricPattern.Equation.BinaryEquation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.BinaryEquation.deserializeBinaryFromReader);
      msg.setBinaryEquation(value);
      break;
    case 2:
      var value = new proto.sisyphus.ParametricPattern.Equation.UnaryEquation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.UnaryEquation.deserializeBinaryFromReader);
      msg.setUnaryEquation(value);
      break;
    case 3:
      var value = /** @type {!proto.sisyphus.ParametricPattern.Equation.Variable} */ (reader.readEnum());
      msg.setVariable(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConstant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.ParametricPattern.Equation} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBinaryEquation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sisyphus.ParametricPattern.Equation.BinaryEquation.serializeBinaryToWriter
    );
  }
  f = this.getUnaryEquation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sisyphus.ParametricPattern.Equation.UnaryEquation.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.sisyphus.ParametricPattern.Equation.Variable} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional BinaryEquation binary_equation = 1;
 * @return {?proto.sisyphus.ParametricPattern.Equation.BinaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.getBinaryEquation = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation.BinaryEquation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation.BinaryEquation, 1));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation.BinaryEquation|undefined} value */
proto.sisyphus.ParametricPattern.Equation.prototype.setBinaryEquation = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], value);
};


proto.sisyphus.ParametricPattern.Equation.prototype.clearBinaryEquation = function() {
  this.setBinaryEquation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.hasBinaryEquation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UnaryEquation unary_equation = 2;
 * @return {?proto.sisyphus.ParametricPattern.Equation.UnaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.getUnaryEquation = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation.UnaryEquation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation.UnaryEquation, 2));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation.UnaryEquation|undefined} value */
proto.sisyphus.ParametricPattern.Equation.prototype.setUnaryEquation = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], value);
};


proto.sisyphus.ParametricPattern.Equation.prototype.clearUnaryEquation = function() {
  this.setUnaryEquation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.hasUnaryEquation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Variable variable = 3;
 * @return {!proto.sisyphus.ParametricPattern.Equation.Variable}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.getVariable = function() {
  return /** @type {!proto.sisyphus.ParametricPattern.Equation.Variable} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.sisyphus.ParametricPattern.Equation.Variable} value */
proto.sisyphus.ParametricPattern.Equation.prototype.setVariable = function(value) {
  jspb.Message.setOneofField(this, 3, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], value);
};


proto.sisyphus.ParametricPattern.Equation.prototype.clearVariable = function() {
  jspb.Message.setOneofField(this, 3, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.hasVariable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double constant = 4;
 * @return {number}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.getConstant = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.sisyphus.ParametricPattern.Equation.prototype.setConstant = function(value) {
  jspb.Message.setOneofField(this, 4, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], value);
};


proto.sisyphus.ParametricPattern.Equation.prototype.clearConstant = function() {
  jspb.Message.setOneofField(this, 4, proto.sisyphus.ParametricPattern.Equation.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.prototype.hasConstant = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.sisyphus.ParametricPattern.Equation.Variable = {
  UNKNOWN_VARIABLE: 0,
  T: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.ParametricPattern.Equation.BinaryEquation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.ParametricPattern.Equation.BinaryEquation.displayName = 'proto.sisyphus.ParametricPattern.Equation.BinaryEquation';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.ParametricPattern.Equation.BinaryEquation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.toObject = function(includeInstance, msg) {
  var f, obj = {
    equationLeft: (f = msg.getEquationLeft()) && proto.sisyphus.ParametricPattern.Equation.toObject(includeInstance, f),
    equationRight: (f = msg.getEquationRight()) && proto.sisyphus.ParametricPattern.Equation.toObject(includeInstance, f),
    operation: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.ParametricPattern.Equation.BinaryEquation;
  return proto.sisyphus.ParametricPattern.Equation.BinaryEquation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.ParametricPattern.Equation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader);
      msg.setEquationLeft(value);
      break;
    case 2:
      var value = new proto.sisyphus.ParametricPattern.Equation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader);
      msg.setEquationRight(value);
      break;
    case 3:
      var value = /** @type {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEquationLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter
    );
  }
  f = this.getEquationRight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional Equation equation_left = 1;
 * @return {?proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.getEquationLeft = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation, 1));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation|undefined} value */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.setEquationLeft = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.clearEquationLeft = function() {
  this.setEquationLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.hasEquationLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Equation equation_right = 2;
 * @return {?proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.getEquationRight = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation, 2));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation|undefined} value */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.setEquationRight = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.clearEquationRight = function() {
  this.setEquationRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.hasEquationRight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BinaryOperationType operation = 3;
 * @return {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.getOperation = function() {
  return /** @type {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType} value */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.setOperation = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.clearOperation = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.sisyphus.ParametricPattern.Equation.BinaryEquation.BinaryOperationType = {
  UNKNOWN_BINARY_OPERATION_TYPE: 0,
  ADD: 1,
  SUBTRACT: 2,
  MULTIPLY: 3,
  DIVIDE: 4,
  POWER: 5,
  ROOT: 6,
  LOG: 7,
  ATAN2: 8
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sisyphus.ParametricPattern.Equation.UnaryEquation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sisyphus.ParametricPattern.Equation.UnaryEquation.displayName = 'proto.sisyphus.ParametricPattern.Equation.UnaryEquation';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.toObject = function(opt_includeInstance) {
  return proto.sisyphus.ParametricPattern.Equation.UnaryEquation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation} msg The msg instance to transform.
 * @return {!Object}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.toObject = function(includeInstance, msg) {
  var f, obj = {
    equation: (f = msg.getEquation()) && proto.sisyphus.ParametricPattern.Equation.toObject(includeInstance, f),
    operation: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sisyphus.ParametricPattern.Equation.UnaryEquation;
  return proto.sisyphus.ParametricPattern.Equation.UnaryEquation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sisyphus.ParametricPattern.Equation;
      reader.readMessage(value,proto.sisyphus.ParametricPattern.Equation.deserializeBinaryFromReader);
      msg.setEquation(value);
      break;
    case 2:
      var value = /** @type {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEquation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sisyphus.ParametricPattern.Equation.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Equation equation = 1;
 * @return {?proto.sisyphus.ParametricPattern.Equation}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.getEquation = function() {
  return /** @type{?proto.sisyphus.ParametricPattern.Equation} */ (
    jspb.Message.getWrapperField(this, proto.sisyphus.ParametricPattern.Equation, 1));
};


/** @param {?proto.sisyphus.ParametricPattern.Equation|undefined} value */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.setEquation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.clearEquation = function() {
  this.setEquation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.hasEquation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UnaryOperationType operation = 2;
 * @return {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.getOperation = function() {
  return /** @type {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType} value */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.setOperation = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.clearOperation = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.sisyphus.ParametricPattern.Equation.UnaryEquation.UnaryOperationType = {
  UNKNOWN_UNARY_OPERATION_TYPE: 0,
  SIN: 1,
  COS: 2,
  TAN: 3,
  ASIN: 4,
  ACOS: 5,
  ATAN: 6,
  NEGATIVE: 7
};

